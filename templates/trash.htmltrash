<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kalkulator Prediksi Skor UTBK 2025</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary: #4361ee;
            --primary-light: #4cc9f0;
            --primary-dark: #3f37c9;
            --secondary: #7209b7;
            --accent: #4895ef;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
            --success: #4cc9f0;
            --warning: #f8961e;
            --danger: #f72585;
            --border-radius: 16px;
            --border-radius-sm: 8px;
            --box-shadow: 0 15px 40px rgba(0, 0, 0, 0.12);
            --box-shadow-sm: 0 5px 15px rgba(0, 0, 0, 0.08);
            --transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            --transition-fast: all 0.2s ease-out;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #e2e8f0 100%);
            color: var(--dark);
            min-height: 100vh;
            padding: 2rem;
            overflow-x: hidden;
            line-height: 1.6;
        }

        .app-container {
            max-width: 1400px;
            margin: 0 auto;
            display: grid;
            grid-template-columns: 1fr 1.2fr;
            gap: 2.5rem;
            perspective: 2000px;
        }

        /* Input Section */
        .input-section {
            background: white;
            border-radius: var(--border-radius);
            padding: 2.5rem;
            box-shadow: var(--box-shadow);
            position: relative;
            z-index: 10;
            transition: var(--transition);
            transform-style: preserve-3d;
            backface-visibility: hidden;
        }

        .input-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 8px;
            background: linear-gradient(90deg, var(--primary), var(--primary-light));
            border-radius: var(--border-radius) var(--border-radius) 0 0;
        }

        .header {
            text-align: center;
            margin-bottom: 2.5rem;
            position: relative;
        }

        .header h1 {
            color: var(--primary-dark);
            font-size: 2.2rem;
            margin-bottom: 0.75rem;
            font-weight: 700;
            letter-spacing: -0.5px;
            background: linear-gradient(to right, var(--primary), var(--primary-light));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-shadow: 0 2px 4px rgba(67, 97, 238, 0.1);
        }

        .header p {
            color: var(--gray);
            font-size: 0.95rem;
            max-width: 80%;
            margin: 0 auto;
        }

        .input-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.75rem;
        }

        .input-group {
            position: relative;
        }

        .input-group label {
            display: block;
            margin-bottom: 0.75rem;
            font-weight: 500;
            color: var(--dark);
            font-size: 0.95rem;
        }

        .input-group input {
            width: 100%;
            padding: 1rem 1.25rem;
            border: 2px solid var(--light-gray);
            border-radius: var(--border-radius-sm);
            font-size: 1rem;
            transition: var(--transition-fast);
            background-color: #f8f9fa;
            font-weight: 500;
            box-shadow: var(--box-shadow-sm);
        }

        .input-group input:focus {
            border-color: var(--accent);
            box-shadow: 0 0 0 4px rgba(72, 149, 239, 0.2);
            outline: none;
            background-color: white;
            transform: translateY(-2px);
        }

        .input-group .max-label {
            position: absolute;
            right: 0.8rem;
            top: 2.6rem;
            font-size: 0.75rem;
            color: var(--gray);
            background: var(--light-gray);
            padding: 0.25rem 0.6rem;
            border-radius: 20px;
            font-weight: 500;
            transition: var(--transition-fast);
        }

        .input-group input:focus + .max-label {
            background: var(--primary);
            color: white;
        }

        .button-group {
            grid-column: span 2;
            display: flex;
            gap: 1.25rem;
            margin-top: 1.5rem;
        }

        .btn {
            padding: 1rem 1.75rem;
            border: none;
            border-radius: var(--border-radius-sm);
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.75rem;
            box-shadow: var(--box-shadow-sm);
            letter-spacing: 0.5px;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            flex: 1;
            position: relative;
            overflow: hidden;
        }

        .btn-primary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: var(--transition);
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(67, 97, 238, 0.3);
        }

        .btn-primary:hover::before {
            left: 100%;
        }

        .btn-secondary {
            background: white;
            color: var(--primary);
            border: 2px solid var(--light-gray);
            flex: 1;
        }

        .btn-secondary:hover {
            background: #f0f4ff;
            border-color: var(--primary);
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(67, 97, 238, 0.1);
        }

        /* Visualization Section */
        .visualization-section {
            display: flex;
            flex-direction: column;
            gap: 2.5rem;
            position: relative;
        }

        .chart-container {
            background: white;
            border-radius: var(--border-radius);
            padding: 2rem;
            box-shadow: var(--box-shadow);
            height: 450px;
            position: relative;
            overflow: hidden;
        }

        .chart-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 8px;
            background: linear-gradient(90deg, var(--secondary), var(--primary-light));
            border-radius: var(--border-radius) var(--border-radius) 0 0;
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            position: relative;
            z-index: 2;
        }

        .chart-header h2 {
            font-size: 1.4rem;
            color: var(--dark);
            font-weight: 600;
            background: linear-gradient(to right, var(--secondary), var(--primary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .chart-actions {
            display: flex;
            gap: 0.75rem;
        }

        .chart-btn {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background: var(--light);
            border: none;
            cursor: pointer;
            transition: var(--transition-fast);
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--gray);
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        .chart-btn.active {
            background: var(--primary);
            color: white;
            transform: scale(1.1);
        }

        .chart-btn:hover {
            background: var(--primary);
            color: white;
            transform: scale(1.1);
        }

        /* Results Section */
        .results-section {
            background: white;
            border-radius: var(--border-radius);
            padding: 2rem;
            box-shadow: var(--box-shadow);
            transition: var(--transition);
            opacity: 0;
            transform: translateY(20px);
            max-height: 0;
            overflow: hidden;
            position: relative;
        }

        .results-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 8px;
            background: linear-gradient(90deg, var(--success), var(--primary-light));
            border-radius: var(--border-radius) var(--border-radius) 0 0;
        }

        .results-section.show {
            opacity: 1;
            transform: translateY(0);
            max-height: 1000px;
        }

        .results-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            position: relative;
        }

        .results-header h2 {
            font-size: 1.4rem;
            color: var(--dark);
            font-weight: 600;
            background: linear-gradient(to right, var(--success), var(--primary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .score-summary {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .score-card {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: var(--border-radius-sm);
            padding: 1.5rem 1rem;
            text-align: center;
            transition: var(--transition);
            box-shadow: var(--box-shadow-sm);
            border: 1px solid rgba(0,0,0,0.05);
            position: relative;
            overflow: hidden;
        }

        .score-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(to bottom, var(--primary), var(--success));
        }

        .score-card .label {
            font-size: 0.85rem;
            color: var(--gray);
            margin-bottom: 0.75rem;
            font-weight: 500;
        }

        .score-card .value {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--primary-dark);
            line-height: 1.2;
        }

        .score-card:nth-child(2) .value {
            color: var(--success);
        }

        .score-card:nth-child(3) .value {
            color: var(--secondary);
        }

        .score-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        }

        .results-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin-top: 1.5rem;
            border-radius: var(--border-radius-sm);
            overflow: hidden;
        }

        .results-table th {
            background: linear-gradient(to right, var(--primary), var(--primary-dark));
            color: white;
            padding: 1rem;
            text-align: left;
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
        }

        .results-table th:first-child {
            border-top-left-radius: var(--border-radius-sm);
        }

        .results-table th:last-child {
            border-top-right-radius: var(--border-radius-sm);
        }

        .results-table td {
            padding: 1rem;
            border-bottom: 1px solid var(--light-gray);
            background: white;
            transition: var(--transition-fast);
        }

        .results-table tr:last-child td {
            border-bottom: none;
        }

        .results-table tr:last-child td:first-child {
            border-bottom-left-radius: var(--border-radius-sm);
        }

        .results-table tr:last-child td:last-child {
            border-bottom-right-radius: var(--border-radius-sm);
        }

        .results-table tr:nth-child(even) td {
            background-color: #fcfcfc;
        }

        .results-table tr:hover td {
            background-color: #f5f8ff;
            transform: scale(1.01);
        }

        .results-table .highlight {
            font-weight: 600;
            color: var(--primary-dark);
        }

        /* Info Link with Morph Animation */
        .info-link {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background: rgba(72, 149, 239, 0.1);
            color: var(--accent);
            transition: var(--transition);
            cursor: pointer;
            position: relative;
            transform-style: preserve-3d;
        }

        .info-link::before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            background: rgba(72, 149, 239, 0.2);
            transform: scale(0);
            transition: var(--transition);
            z-index: -1;
        }

        .info-link:hover {
            background: rgba(72, 149, 239, 0.2);
            transform: translateY(-2px) rotate(15deg);
        }

        .info-link:hover::before {
            transform: scale(1.5);
            opacity: 0;
        }

        .info-link i {
            transition: var(--transition);
        }

        .info-link.active {
            animation: morph 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
        }

        @keyframes morph {
            0% { transform: scale(1) rotate(0); }
            25% { transform: scale(1.2) rotate(90deg); }
            50% { transform: scale(0.9) rotate(180deg); }
            75% { transform: scale(1.1) rotate(270deg); }
            100% { transform: scale(1) rotate(360deg); }
        }

        /* Modal for Info */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.4s ease-out;
            backdrop-filter: blur(5px);
        }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .modal-content {
            background: white;
            border-radius: var(--border-radius);
            width: 90%;
            max-width: 600px;
            padding: 2.5rem;
            box-shadow: 0 25px 50px rgba(0,0,0,0.2);
            transform: translateY(50px);
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            opacity: 0;
            position: relative;
        }

        .modal-overlay.active .modal-content {
            transform: translateY(0);
            opacity: 1;
        }

        .modal-close {
            position: absolute;
            top: 1.5rem;
            right: 1.5rem;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: var(--light-gray);
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: var(--transition-fast);
            border: none;
            font-size: 1.2rem;
            color: var(--gray);
        }

        .modal-close:hover {
            background: var(--primary);
            color: white;
            transform: rotate(90deg);
        }

        .modal-header h3 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: var(--primary-dark);
            background: linear-gradient(to right, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .modal-body {
            margin-top: 1.5rem;
        }

        .modal-body p {
            margin-bottom: 1.5rem;
            color: var(--gray);
        }

        .formula-box {
            background: #f8f9fa;
            border-radius: var(--border-radius-sm);
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border-left: 4px solid var(--primary);
        }

        .formula-box h4 {
            color: var(--primary-dark);
            margin-bottom: 0.75rem;
            font-size: 1.1rem;
        }

        .formula {
            font-family: 'Courier New', monospace;
            background: white;
            padding: 1rem;
            border-radius: var(--border-radius-sm);
            display: inline-block;
            font-weight: bold;
            color: var(--primary-dark);
            box-shadow: var(--box-shadow-sm);
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .app-container {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .input-grid {
                grid-template-columns: 1fr;
            }
            
            .button-group {
                grid-column: span 1;
                flex-direction: column;
            }
            
            .score-summary {
                grid-template-columns: 1fr;
                gap: 1rem;
            }
            
            body {
                padding: 1.5rem;
            }
            
            .input-section, .chart-container, .results-section {
                padding: 1.5rem;
            }
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-in {
            animation: fadeIn 0.6s ease forwards;
        }

        .delay-1 { animation-delay: 0.1s; }
        .delay-2 { animation-delay: 0.2s; }
        .delay-3 { animation-delay: 0.3s; }
        .delay-4 { animation-delay: 0.4s; }

        /* Floating Particles */
        .particles {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            pointer-events: none;
            z-index: -1;
            overflow: hidden;
        }

        .particle {
            position: absolute;
            background: rgba(67, 97, 238, 0.1);
            border-radius: 50%;
            animation: float 15s infinite linear;
        }

        @keyframes float {
            0% { transform: translateY(0) rotate(0deg); }
            100% { transform: translateY(-1000px) rotate(720deg); }
        }
    </style>
</head>
<body>
    <div class="particles" id="particles"></div>
    
    <div class="app-container">
        <!-- Input Section -->
        <section class="input-section">
            <div class="header">
                <h1>Kalkulator Prediksi Skor UTBK 2025</h1>
                <p>Masukkan jumlah jawaban benar untuk setiap subtes untuk mendapatkan prediksi skor UTBK</p>
            </div>
            
            <div class="input-grid">
                <div class="input-group">
                    <label for="ppu">Penalaran Pemahaman Umum (PPU)</label>
                    <input type="number" id="ppu" min="0" max="20" placeholder="0-20">
                    <span class="max-label">Max: 20</span>
                </div>
                
                <div class="input-group">
                    <label for="pu">Pengetahuan Umum (PU)</label>
                    <input type="number" id="pu" min="0" max="30" placeholder="0-30">
                    <span class="max-label">Max: 30</span>
                </div>
                
                <div class="input-group">
                    <label for="pbm">Pemahaman Bacaan Menulis (PBM)</label>
                    <input type="number" id="pbm" min="0" max="20" placeholder="0-20">
                    <span class="max-label">Max: 20</span>
                </div>
                
                <div class="input-group">
                    <label for="pk">Pengetahuan Kuantitatif (PK)</label>
                    <input type="number" id="pk" min="0" max="20" placeholder="0-20">
                    <span class="max-label">Max: 20</span>
                </div>
                
                <div class="input-group">
                    <label for="lbi">Literasi Bahasa Indonesia (LBI)</label>
                    <input type="number" id="lbi" min="0" max="30" placeholder="0-30">
                    <span class="max-label">Max: 30</span>
                </div>
                
                <div class="input-group">
                    <label for="pm">Pengetahuan Matematika (PM)</label>
                    <input type="number" id="pm" min="0" max="20" placeholder="0-20">
                    <span class="max-label">Max: 20</span>
                </div>
                
                <div class="input-group">
                    <label for="lbe">Literasi Bahasa Inggris (LBE)</label>
                    <input type="number" id="lbe" min="0" max="20" placeholder="0-20">
                    <span class="max-label">Max: 20</span>
                </div>
            </div>
            
            <div class="button-group">
                <button class="btn btn-primary" id="calculate-btn">
                    <i class="fas fa-calculator"></i> Hitung Skor
                </button>
                <button class="btn btn-secondary" id="reset-btn">
                    <i class="fas fa-redo"></i> Reset
                </button>
            </div>
        </section>
        
        <!-- Visualization Section -->
        <section class="visualization-section">
            <div class="chart-container">
                <div class="chart-header">
                    <h2>Visualisasi Komparasi Subtes</h2>
                    <div class="chart-actions">
                        <button class="chart-btn active" id="radar-btn" title="Tampilan Radar">
                            <i class="fas fa-bullseye"></i>
                        </button>
                        <button class="chart-btn" id="bar-btn" title="Tampilan Bar">
                            <i class="fas fa-chart-bar"></i>
                        </button>
                        <button class="chart-btn" id="download-btn" title="Unduh Grafik">
                            <i class="fas fa-download"></i>
                        </button>
                    </div>
                </div>
                <canvas id="resultChart"></canvas>
            </div>
            
            <div class="results-section" id="results-section">
                <div class="results-header">
                    <h2>Hasil Perhitungan</h2>
                    <div class="info-link" id="info-link">
                        <i class="fas fa-info-circle"></i>
                    </div>
                </div>
                
                <div class="score-summary">
                    <div class="score-card fade-in delay-1">
                        <div class="label">Total Jawaban Benar</div>
                        <div class="value" id="summary-correct">0</div>
                    </div>
                    <div class="score-card fade-in delay-2">
                        <div class="label">Persentase Benar</div>
                        <div class="value" id="summary-percentage">0%</div>
                    </div>
                    <div class="score-card fade-in delay-3">
                        <div class="label">Prediksi Skor UTBK</div>
                        <div class="value" id="summary-score">200</div>
                    </div>
                </div>
                
                <table class="results-table">
                    <thead>
                        <tr>
                            <th>Subtes</th>
                            <th>Benar</th>
                            <th>Total</th>
                            <th>Persentase</th>
                            <th>Skor UTBK</th>
                        </tr>
                    </thead>
                    <tbody id="results-body">
                        <!-- Hasil akan diisi oleh JavaScript -->
                    </tbody>
                </table>
            </div>
        </section>
    </div>

    <!-- Modal for Formula Info -->
    <div class="modal-overlay" id="modal-overlay">
        <div class="modal-content">
            <button class="modal-close" id="modal-close">&times;</button>
            <div class="modal-header">
                <h3>Rumus Perhitungan Skor UTBK</h3>
            </div>
            <div class="modal-body">
                <p>Kalkulator ini menggunakan formula resmi dari LTMPT untuk memprediksi skor UTBK berdasarkan jumlah jawaban benar Anda.</p>
                
                <div class="formula-box">
                    <h4>Formula Dasar:</h4>
                    <div class="formula">
                        Skor UTBK = 200 + (Persentase Benar × 8)
                    </div>
                </div>
                
                <div class="formula-box">
                    <h4>Langkah Perhitungan:</h4>
                    <ol>
                        <li>Hitung persentase benar untuk setiap subtes: (Jawaban Benar / Total Soal) × 100</li>
                        <li>Hitung skor subtes: 200 + (Persentase Benar × 8)</li>
                        <li>Hitung persentase benar total dari semua subtes</li>
                        <li>Hitung skor UTBK akhir menggunakan formula dasar</li>
                    </ol>
                </div>
                
                <p>Skor minimum adalah 200 dan skor maksimum teoritis adalah 1000 (jika menjawab semua soal dengan benar).</p>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
    <script>
        // Inisialisasi variabel
        let resultChart;
        const maxScores = {
            PPU: 20,
            PU: 30,
            PBM: 20,
            PK: 20,
            LBI: 30,
            PM: 20,
            LBE: 20
        };
        const subtesNames = {
            PPU: "Penalaran Pemahaman Umum",
            PU: "Pengetahuan Umum",
            PBM: "Pemahaman Bacaan Menulis",
            PK: "Pengetahuan Kuantitatif",
            LBI: "Literasi Bahasa Indonesia",
            PM: "Pengetahuan Matematika",
            LBE: "Literasi Bahasa Inggris"
        };
        
        // Create floating particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = window.innerWidth < 768 ? 15 : 30;
            
            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.classList.add('particle');
                
                // Random properties
                const size = Math.random() * 10 + 5;
                const posX = Math.random() * 100;
                const posY = Math.random() * 100 + 100;
                const delay = Math.random() * 15;
                const duration = Math.random() * 10 + 15;
                const opacity = Math.random() * 0.3 + 0.1;
                
                // Apply styles
                particle.style.width = `${size}px`;
                particle.style.height = `${size}px`;
                particle.style.left = `${posX}%`;
                particle.style.top = `${posY}%`;
                particle.style.animationDelay = `${delay}s`;
                particle.style.animationDuration = `${duration}s`;
                particle.style.opacity = opacity;
                particle.style.background = `rgba(67, 97, 238, ${opacity})`;
                
                particlesContainer.appendChild(particle);
            }
        }
        
        // Inisialisasi chart
        function initChart() {
            const ctx = document.getElementById('resultChart').getContext('2d');
            resultChart = new Chart(ctx, {
                type: 'radar',
                data: {
                    labels: Object.keys(subtesNames),
                    datasets: [{
                        label: 'Jawaban Benar',
                        data: Object.values(maxScores).map(() => 0),
                        backgroundColor: 'rgba(67, 97, 238, 0.2)',
                        borderColor: 'rgba(67, 97, 238, 1)',
                        borderWidth: 2,
                        pointBackgroundColor: 'rgba(67, 97, 238, 1)',
                        pointBorderColor: '#fff',
                        pointHoverRadius: 6,
                        pointHoverBackgroundColor: 'rgba(67, 97, 238, 1)',
                        pointHoverBorderColor: '#fff',
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        r: {
                            angleLines: {
                                display: true,
                                color: 'rgba(0, 0, 0, 0.1)'
                            },
                            suggestedMin: 0,
                            suggestedMax: 30,
                            ticks: {
                                stepSize: 5,
                                backdropColor: 'transparent',
                                font: {
                                    size: 11
                                }
                            },
                            pointLabels: {
                                font: {
                                    size: 12,
                                    family: "'Poppins', sans-serif"
                                },
                                color: '#6c757d'
                            },
                            grid: {
                                color: 'rgba(0, 0, 0, 0.05)'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                font: {
                                    family: "'Poppins', sans-serif",
                                    size: 12
                                },
                                padding: 20
                            }
                        },
                        title: {
                            display: false
                        },
                        tooltip: {
                            backgroundColor: 'rgba(0, 0, 0, 0.8)',
                            titleFont: {
                                family: "'Poppins', sans-serif",
                                size: 14
                            },
                            bodyFont: {
                                family: "'Poppins', sans-serif",
                                size: 12
                            },
                            callbacks: {
                                label: function(context) {
                                    return `${subtesNames[context.label]}: ${context.raw} dari ${maxScores[context.label]}`;
                                }
                            }
                        }
                    },
                    animation: {
                        duration: 1500,
                        easing: 'easeOutQuart'
                    }
                }
            });
        }
        
        // Hitung skor UTBK
        function calculateScores() {
            const inputs = {};
            let totalCorrect = 0;
            let totalQuestions = 0;
            
            // Ambil nilai dari input
            Object.keys(maxScores).forEach(subtes => {
                const value = parseInt(document.getElementById(subtes.toLowerCase()).value) || 0;
                inputs[subtes] = Math.min(value, maxScores[subtes]);
                totalCorrect += inputs[subtes];
                totalQuestions += maxScores[subtes];
            });
            
            // Hitung persentase dan skor
            const totalPercentage = (totalCorrect / totalQuestions) * 100;
            const utbkScore = 200 + (totalPercentage * 8);
            
            // Update chart
            updateChart(inputs);
            
            // Tampilkan hasil
            displayResults(inputs, totalCorrect, totalQuestions, totalPercentage, utbkScore);
            
            // Tampilkan section hasil dengan animasi
            const resultsSection = document.getElementById('results-section');
            resultsSection.classList.add('show');
            
            // Scroll ke hasil jika di mobile
            if (window.innerWidth < 768) {
                resultsSection.scrollIntoView({ behavior: 'smooth' });
            }
        }
        
        // Update chart dengan data baru
        function updateChart(data) {
            const chartData = Object.keys(maxScores).map(subtes => data[subtes] || 0);
            
            if (resultChart) {
                resultChart.data.datasets[0].data = chartData;
                resultChart.update();
            }
        }
        
        // Tampilkan hasil perhitungan
        function displayResults(data, totalCorrect, totalQuestions, totalPercentage, utbkScore) {
            // Update summary
            document.getElementById('summary-correct').textContent = totalCorrect;
            document.getElementById('summary-percentage').textContent = totalPercentage.toFixed(2) + '%';
            document.getElementById('summary-score').textContent = utbkScore.toFixed(2);
            
            // Update table
            const resultsBody = document.getElementById('results-body');
            resultsBody.innerHTML = '';
            
            Object.entries(data).forEach(([subtes, correct], index) => {
                const total = maxScores[subtes];
                const percentage = (correct / total) * 100;
                const score = 200 + (percentage * 8);
                
                const row = document.createElement('tr');
                row.className = `fade-in delay-${index % 4}`;
                row.innerHTML = `
                    <td>${subtesNames[subtes]}</td>
                    <td>${correct}</td>
                    <td>${total}</td>
                    <td>${percentage.toFixed(2)}%</td>
                    <td class="highlight">${score.toFixed(2)}</td>
                `;
                resultsBody.appendChild(row);
            });
        }
        
        // Reset form
        function resetForm() {
            Object.keys(maxScores).forEach(subtes => {
                document.getElementById(subtes.toLowerCase()).value = '';
            });
            
            if (resultChart) {
                resultChart.data.datasets[0].data = Object.values(maxScores).map(() => 0);
                resultChart.update();
            }
            
            document.getElementById('results-section').classList.remove('show');
        }
        
        // Ganti tipe chart
        function changeChartType(type) {
            if (resultChart) {
                // Update active button
                document.getElementById('radar-btn').classList.remove('active');
                document.getElementById('bar-btn').classList.remove('active');
                document.getElementById(`${type}-btn`).classList.add('active');
                
                // Destroy old chart
                resultChart.destroy();
                const ctx = document.getElementById('resultChart').getContext('2d');
                
                // Get current data
                const currentData = resultChart.data.datasets[0].data;
                
                // Create new chart
                resultChart = new Chart(ctx, {
                    type: type,
                    data: {
                        labels: Object.keys(subtesNames),
                        datasets: [{
                            label: 'Jawaban Benar',
                            data: currentData,
                            backgroundColor: type === 'radar' 
                                ? 'rgba(67, 97, 238, 0.2)' 
                                : 'rgba(67, 97, 238, 0.7)',
                            borderColor: 'rgba(67, 97, 238, 1)',
                            borderWidth: 2,
                            hoverBackgroundColor: 'rgba(67, 97, 238, 0.9)',
                            borderRadius: type === 'bar' ? 4 : 0,
                            barPercentage: 0.7
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 30,
                                ticks: {
                                    stepSize: 5,
                                    font: {
                                        size: 11
                                    }
                                },
                                grid: {
                                    color: 'rgba(0, 0, 0, 0.05)'
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    font: {
                                        size: 11
                                    }
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                position: 'top',
                                labels: {
                                    font: {
                                        family: "'Poppins', sans-serif",
                                        size: 12
                                    },
                                    padding: 20
                                }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                titleFont: {
                                    family: "'Poppins', sans-serif",
                                    size: 14
                                },
                                bodyFont: {
                                    family: "'Poppins', sans-serif",
                                    size: 12
                                },
                                callbacks: {
                                    label: function(context) {
                                        return `${subtesNames[context.label]}: ${context.raw} dari ${maxScores[context.label]}`;
                                    }
                                }
                            }
                        },
                        animation: {
                            duration: 1500,
                            easing: 'easeOutQuart'
                        }
                    }
                });
            }
        }
        
        // Download chart sebagai gambar
        function downloadChart() {
            const chartCanvas = document.getElementById('resultChart');
            
            // Show loading state
            const downloadBtn = document.getElementById('download-btn');
            const originalContent = downloadBtn.innerHTML;
            downloadBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Memproses...';
            downloadBtn.disabled = true;
            
            // Use html2canvas with quality settings
            html2canvas(chartCanvas, {
                scale: 2,
                logging: false,
                useCORS: true,
                allowTaint: true,
                backgroundColor: 'white'
            }).then(canvas => {
                const link = document.createElement('a');
                link.download = 'visualisasi-skor-utbk.png';
                link.href = canvas.toDataURL('image/png', 1.0);
                link.click();
                
                // Restore button state
                downloadBtn.innerHTML = originalContent;
                downloadBtn.disabled = false;
            });
        }
        
        // Modal functions
        function showModal() {
            const modal = document.getElementById('modal-overlay');
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
        }
        
        function hideModal() {
            const modal = document.getElementById('modal-overlay');
            modal.classList.remove('active');
            document.body.style.overflow = '';
        }
        
        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            createParticles();
            initChart();
            
            // Button events
            document.getElementById('calculate-btn').addEventListener('click', calculateScores);
            document.getElementById('reset-btn').addEventListener('click', resetForm);
            document.getElementById('radar-btn').addEventListener('click', () => changeChartType('radar'));
            document.getElementById('bar-btn').addEventListener('click', () => changeChartType('bar'));
            document.getElementById('download-btn').addEventListener('click', downloadChart);
            
            // Info link with morph animation
            const infoLink = document.getElementById('info-link');
            infoLink.addEventListener('click', function(e) {
                e.preventDefault();
                this.classList.add('active');
                showModal();
            });
            
            infoLink.addEventListener('animationend', function() {
                this.classList.remove('active');
            });
            
            // Modal events
            document.getElementById('modal-close').addEventListener('click', hideModal);
            document.getElementById('modal-overlay').addEventListener('click', function(e) {
                if (e.target === this) hideModal();
            });
            
            // Validasi input real-time
            Object.keys(maxScores).forEach(subtes => {
                const input = document.getElementById(subtes.toLowerCase());
                input.addEventListener('input', function() {
                    const max = maxScores[subtes];
                    if (parseInt(this.value) > max) {
                        this.value = max;
                    }
                });
            });
            
            // Add ripple effect to buttons
            document.querySelectorAll('.btn').forEach(btn => {
                btn.addEventListener('click', function(e) {
                    const x = e.clientX - e.target.getBoundingClientRect().left;
                    const y = e.clientY - e.target.getBoundingClientRect().top;
                    
                    const ripple = document.createElement('span');
                    ripple.classList.add('ripple');
                    ripple.style.left = `${x}px`;
                    ripple.style.top = `${y}px`;
                    
                    this.appendChild(ripple);
                    
                    setTimeout(() => {
                        ripple.remove();
                    }, 800);
                });
            });
        });
    </script>
</body>
</html>